<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task.xsd
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
">

	<bean class="com.viptrip.base.common.support.ApplicationContextHelper" />

	<!--自动扫描 -->
	<context:component-scan base-package="com.viptrip">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置数据库加密 -->
	<bean id="propertyConfigurer" class="com.viptrip.base.db.DecryptJdbcProperty">
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc/database.properties</value>
				<value>classpath:conf/hibernate/hibernate.properties</value>
			</list>
		</property>
	</bean>


	<!-- druid 数据源1 本地数据源 -->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="driverClassName" value="${oracle.driver}" />
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.user}" />
		<property name="password" value="${oracle.pwd}" />
		<property name="minIdle" value="${oracle.initialSize}" />
		<property name="maxActive" value="${oracle.maxconn}" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>


	<!-- Hibernate配置 -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="druidDataSource" /> <property name="namingStrategy"> 
		<bean class="org.hibernate.cfg.ImprovedNamingStrategy" /> </property> <property 
		name="hibernateProperties"> <props> <prop key="hibernate.dialect">${hibernate.dialect}</prop> 
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop> <prop key="hibernate.format_sql">${hibernate.format_sql}</prop> 
		<prop key="hibernate.cache.provider_class">com.viptrip.base.cache.DefaultCacheProvider</prop> 
		<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
		<prop key="hibernate.cache.use_query_cache">false</prop> <prop key="hibernate.cache.provider_configuration_file_resource_path">com/viptrip/base/spring/ehcache-hibernate.xml</prop> 
		<prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop> 
		<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory</prop> 
		<prop key="hibernate.jdbc.fetch_size">${hibernate.fetch_size}</prop> <prop 
		key="hibernate.jdbc.batch_size">${hibernate.batch_size}</prop> <prop key="hibernate.autoReconnect">true</prop> 
		</props> <map> <entry key="hibernate.dialect" value="${hibernate.dialect}" 
		/> <entry key="hibernate.show_sql" value="${hibernate.show_sql}" /> <entry 
		key="hibernate.format_sql" value="${hibernate.format_sql}" /> <entry key="hibernate.jdbc.fetch_size" 
		value="${hibernate.fetch_size}" /> <entry key="hibernate.jdbc.batch_size" 
		value="${hibernate.batch_size}" /> <entry key="hibernate.cache.use_second_level_cache" 
		value="${hibernate.cache.use_second_level_cache}" /> <entry key="hibernate.cache.use_query_cache" 
		value="${hibernate.cache.use_query_cache}" /> <entry key="hibernate.cache.region.factory_class" 
		value="${hibernate.cache.region.factory_class}" /> <entry key="hibernate.cache.region_prefix" 
		value="${hibernate.cache.region_prefix}" /> <entry key="hibernate.cache.provider_configuration_file_resource_path" 
		value="${hibernate.cache.provider_configuration_file_resource_path}" /> </map> 
		</property> <property name="packagesToScan"> <list> <value>com.viptrip.*.entity</value> 
		<value>com.viptrip.*.*.entity</value> <value>com.viptrip.*.*.*.entity</value> 
		</list> </property> </bean> -->

	<!-- JPA实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="persistenceUnitName" value="wetrip" /> -->
		<!-- <property name="persistenceXmlLocation" value="classpath*:conf/jpa/persistence.xml"></property> -->
		<property name="dataSource" ref="druidDataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="packagesToScan">
			<list>
				<value>com.viptrip.*.entity</value>
				<value>com.viptrip.*.*.entity</value>
				<value>com.viptrip.*.*.*.entity</value>
			</list>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.fetch_size}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.redis.hibernate4.SingletonRedisRegionFactory</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:conf/redis/hibernate-redis.properties</prop>
				<prop key="spring.jpa.properties.hibernate.cache.use_second_level_cache">true</prop>
				<prop key="spring.jpa.properties.hibernate.cache.use_query_cache">true</prop>
				<prop key="spring.jpa.properties.hibernate.cache.region_prefix">hibernate</prop>
				<prop key="spring.jpa.properties.hibernate.cache.use_structured_entries">true</prop>
				<prop key="spring.jpa.properties.hibernate.generate_statistics">true</prop>
			</props>
			
			<!-- <map> 
				<entry key="hibernate.dialect" value="${hibernate.dialect}" /> 
				<entry key="hibernate.show_sql" value="${hibernate.show_sql}" /> 
				<entry key="hibernate.format_sql" value="${hibernate.format_sql}" /> 
				<entry key="hibernate.jdbc.fetch_size" value="${hibernate.fetch_size}" /> 
				<entry key="hibernate.jdbc.batch_size" value="${hibernate.batch_size}" /> 
				<entry key="hibernate.cache.use_second_level_cache" value="true" /> 
				<entry key="hibernate.cache.use_query_cache" value="true" /> 
				<entry key="hibernate.cache.provider_configuration" value="classpath:conf/ehcache.xml" />
				<entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" /> 
				<entry key="hibernate.cache.region_prefix" value="hibernate" /> 
			</map>  -->
		</property>
	</bean>
	<!-- 用于设置JPA实现厂商的特定属性 -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="ORACLE" />
	</bean>

	<jpa:repositories
            base-package="com.viptrip.**.dao"
            repository-impl-postfix="Impl"
            entity-manager-factory-ref="entityManagerFactory"
            transaction-manager-ref="transactionManager">
    </jpa:repositories>



	<!-- 配置spring的JdbcTemplate -->
	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="druidDataSource"></property> 
	</bean> -->


	<!-- 配置事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" 
		> <property name="transactionManager" ref="atomikosTransactionManager" /> 
		<property name="userTransaction" ref="atomikosUserTransaction" /> </bean> -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<aop:config>
		<aop:advisor id="managerTx" advice-ref="txAdvice"
			pointcut="execution(* *..service.*Manager.*(..))" order="0" />
		<aop:advisor id="managerTxEx" advice-ref="txAdvice"
			pointcut="execution(* *..service..*Manager.*(..))" order="1" />
		<aop:advisor id="managerTxExt" advice-ref="txAdvice"
			pointcut="execution(* *..service..*Service.*(..))" order="1" />
		<!-- <aop:advisor id="daoTx" advice-ref="txAdvice" pointcut="execution(* 
			*..dao.*Dao.*(..))" order="1"/> -->
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--tx:method name="get*" read-only="true"/ -->
			<tx:method name="list*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="match*" propagation="REQUIRED" />
			<tx:method name="confirm*" propagation="REQUIRED" />
			<tx:method name="run*" propagation="REQUIRED" />
			<tx:method name="import*" propagation="REQUIRED" />
			<tx:method name="export*" propagation="REQUIRED" />
			<tx:method name="dealWith*" propagation="REQUIRED" />
			<tx:method name="autoSendHotelSms" propagation="REQUIRED" /><!-- 
				酒店定时任务自动发送短信事物 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="setFDPrice" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 注解式事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<import resource="cxf-client.xml"/>
	
	<import resource="redis.xml"/>

	<import resource="spring-task.xml"/>
	
	<!-- <import resource="jms.xml"/> -->
</beans> 