<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 加载Reids属性配置文件 -->
	<bean id="propertyConfigurerRedis"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="systemPropertiesMode" value="1" />
		<property name="searchSystemEnvironment" value="true" />
		<property name="locations">
			<list>
				<value>classpath:conf/redis/redis.properties</value>
			</list>
		</property>
	</bean>

	<!-- jedis pool配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最小空闲连接数量, 处理间隔时间为 timeBetweenEvictionRunsMillis -->
        <property name="minIdle" value="${jedis.pool.minIdle}"/>
		<!-- 最大空闲连接数量 -->
        <property name="maxIdle" value="${jedis.pool.maxIdle}"/>
        <!-- 池中持有的最大连接数量 -->
        <property name="maxTotal" value="${jedis.pool.maxTotal}"/>
        <!-- borrowObject 方法的最大等待时间 -->
        <property name="maxWaitMillis" value="${jedis.pool.maxWait}"/>
        <!-- 池中可用资源耗尽时, borrow 方法是否阻塞等待 maxWaitMillis 毫秒 -->
        <property name="blockWhenExhausted" value="true"/>
        <!-- borrowObject 时是否执行检测 -->
        <property name="testOnBorrow" value="${jedis.pool.testOnBorrow}"/>
        <!-- 是否检测空闲连接链接的有效性, 间隔时间为 timeBetweenEvictionRunsMillis -->
        <property name="testWhileIdle" value="true"/>
        <!-- 空闲对象被清除需要达到的最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="${jedis.pool.minEvictableIdleTimeMillis}"/>
        <!-- 空闲检测线程,sleep 间隔多长时间,去处理与idle相关的事情 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jedis.pool.timeBetweenEvictionRunsMillis}"/>
	</bean>

	<!-- spring data redis -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true"></property>
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="database" value="${redis.default.db}"></property>
		<constructor-arg index="0" ref="jedisPoolConfig" />
	</bean>

	<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connectionFactory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer">
	</bean> -->
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">   
        <property name="connectionFactory"   ref="jedisConnectionFactory" />   
        <property name="keySerializer">   
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />   
        </property>      
        <property name="valueSerializer">   
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />   
        </property>   
        <property name="hashKeySerializer">     
           <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>     
        </property>   
        <property name="hashValueSerializer">   
           <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>     
        </property> 
     </bean>

	<!--这个主要是解决用cmd查看数据时为了显示正常 -->
	<!-- <bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" /> -->



</beans>  